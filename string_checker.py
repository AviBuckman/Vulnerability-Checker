import glob, os, sys, subprocess,re
from csv import reader
# dictionary keys
columnName = ["package", "full_path","directory","file_name" , "file_info_output", "md5", "sha1", "sha256" , "strings" ,  "readelf", "vulnerable_functions", "secret_keys"]
PACKAGE = "package"
FULL_PATH = "full_path"
DIRECTORY = "directory"
FILE_NAME = "file_name"
FILE_OUTPUT = "file_info_output"
MD5="md5"
SHA1 ="sha1"
SHA256 = "sha256"
STRINGS = "strings"
READELF = "readelf"
VULNERABLE_FUNC= "vulnerable_functions"
SECRET_KEYS = "secret_keys"
def findKeyWordsInFile(path,secretKeysList):
    txt= open(path)
    found = set()
    for line in txt:
        for func_word in secretKeysList:
            if re.search(func_word , line, re.IGNORECASE):
                found.add(func_word)
    return found

def loadKeysFromCsv():
    with open('secretKeys.csv', 'r') as read_obj:
        csv_reader = reader(read_obj)
        list_of_rows = list(csv_reader)
        return list(map(lambda x: x[0], list_of_rows))


def txtFileChecker(path:str):
    secretKeysList = loadKeysFromCsv()
    file_dict = {}
    temp_path = "temp.txt"
    strings_command = ' strings ' + path + ' > ' + temp_path
    strings_output = subprocess.run(strings_command, shell=True, stdout=subprocess.PIPE).stdout.decode('utf-8')
    foundKeys= findKeyWordsInFile(temp_path, secretKeysList)
    if foundKeys:
        file_dict[STRINGS]=strings_output
        file_dict[SECRET_KEYS]=foundKeys
        #erase the usage of temp
        subprocess.call("rm temp.txt", shell=True)
        return file_dict
    else:
        subprocess.call("rm temp.txt", shell=True)
        return None

