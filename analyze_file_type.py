import subprocess, re, csv

def is_executable(path):
    try:
        dump = subprocess.call(['objdump', '-D', path], stdout=subprocess.PIPE).stdout.decode('utf-8')
        if dump == 0:
            return True
    except:
        return False
    return False
with open('file_type1s.csv', newline='') as f:
    reader = csv.reader(f)
    data = list(reader)
    if 

    # lines = list(map(lambda x: x.append(is_executable(x[1])),lines))


def generate_file_info(file_path, file_info):
    index = file_info.find(':')
    if index > -1:
        file_info = file_info[index+2:]
    index = file_info.find('\n')
    if index > -1:
        file_info = file_info[0:index]
    
    if file_info.startswith("ELF"):
        file_info = file_info.split("BuildID")[0]
    elif "symbolic link to" in file_info:
        file_info = file_info.split("to")[0]
    file_info_dict[file_info] = file_path




# with open('file_types.csv','w') as result_file:
#         wr = writer(result_file, dialect='excel')
#         wr.writerows(iterable)   
    #lis = [line.split(',') for line in f]        # create a list of lists
    # for i, x in enumerate(lis):              #print the list items 
    #     print(x.pop())
    #     #dump = subprocess.run(['objdump', '-D', path], stdout=subprocess.PIPE).stdout.decode('utf-8')
   